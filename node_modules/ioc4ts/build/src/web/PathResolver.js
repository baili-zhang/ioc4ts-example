"use strict";
/**
 * PathResolver 类
 *
 * 工具类：根据 path （路径字符串）、ParameterDefinition 表和 arguments 解析出请求路径
 *
 * @author zhangbaili
 * @since 1.0.8-beta
*/
Object.defineProperty(exports, "__esModule", { value: true });
class PathResolver {
    static resolve(path, parameters, args) {
        const reg = /\{([a-z]+)\}/ig;
        let item;
        let finalPath = path;
        while ((item = reg.exec(path)) !== null) {
            const name = item[1];
            const type = 'PathVariable';
            const parameter = parameters.get(type);
            if (!parameter) {
                throw new Error(`Error: Cannot find parameter with type "${type}" !`);
            }
            if (!(parameter instanceof Map)) {
                throw new Error(`Error: @${type} needs to provide name parameter !`);
            }
            const index = parameter.get(name);
            if (index === undefined) {
                throw new Error(`Error: Cannot find PathVariable named ${name} !`);
            }
            finalPath = finalPath.replace(item[0], args[index]);
        }
        return finalPath;
    }
}
exports.default = PathResolver;
