"use strict";
/**
 * ReturnType 注解
 *
 * 定义在类的方法上，用来标识方法的返回类型
 *
 * @author zhangbaili
 * @since 2021/10/23
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ApplicationContext_1 = __importDefault(require("../ApplicationContext"));
const MethodDefinition_1 = __importDefault(require("../MethodDefinition"));
function ReturnType(type) {
    return (ctor, methodName) => {
        const beanFactory = ApplicationContext_1.default.getInstance().getBeanFactory();
        const beanDefinition = beanFactory.getBeanDefinitionByCtor(ctor);
        if (beanDefinition) {
            let methodDefinition = beanDefinition.getMethods().get(methodName);
            if (!methodDefinition) {
                methodDefinition = new MethodDefinition_1.default(methodName);
                methodDefinition.setReturnType(type);
                beanDefinition.appendMethod(methodName, methodDefinition);
            }
            else {
                methodDefinition.setReturnType(type);
            }
        }
        else {
            const newBeanDefinition = beanFactory.loadBeanDefinition(ctor);
            const methodDefinition = new MethodDefinition_1.default(methodName);
            methodDefinition.setReturnType(type);
            newBeanDefinition.appendMethod(methodName, methodDefinition);
        }
    };
}
exports.default = ReturnType;
