"use strict";
/**
 * ParameterGenerator 类
 *
 * 用于生成方法参数定义的工具类
 *
 * @author zhangbaili
 * @since 1.1.0-beta
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ApplicationContext_1 = __importDefault(require("./ApplicationContext"));
const MethodDefinition_1 = __importDefault(require("./MethodDefinition"));
class ParameterGenerator {
    static generate(name, type) {
        return (ctor, methodName, parameterIndex) => {
            const beanFactory = ApplicationContext_1.default.getInstance().getBeanFactory();
            let beanDefinition = beanFactory.getBeanDefinitionByCtor(ctor);
            if (!beanDefinition) {
                beanDefinition = beanFactory.loadBeanDefinition(ctor);
            }
            let methodDefinition = beanDefinition.getMethods().get(methodName);
            if (!methodDefinition) {
                methodDefinition = new MethodDefinition_1.default(methodName);
                beanDefinition.appendMethod(methodName, methodDefinition);
            }
            methodDefinition.appendParameter(type, name, parameterIndex);
        };
    }
}
exports.default = ParameterGenerator;
